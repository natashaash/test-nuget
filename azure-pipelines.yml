variables:

- name: BuildParameters.solution
  value: '*.sln'
- name: BuildParameters.ArtifactName
  value: drop
trigger:
  branches:
    include:
    - refs/heads/master
name: $(date:yyyyMMdd)$(rev:.r)
jobs:
- job: Job_1
  displayName: Agent job 1
  pool:
    vmImage: windows-2019
  steps:
  - checkout: self
  - task: NuGetToolInstaller@0
    displayName: Use NuGet 4.4.1
    inputs:
      versionSpec: 4.4.1
  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      solution: $(BuildParameters.solution)
 
  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: '$(Build.SourcesDirectory)\MyWebSites1\packages.config'
      feedsToUse: 'config'
      nugetConfigPath: 'NuGet.config'
      noCache: true
      restoreDirectory: '$(Build.SourcesDirectory)\packages'

  - task: CopyFiles@2
    displayName: 'Copy files'
    inputs:
     SourceFolder: '$(Build.SourcesDirectory)\packages\DevExpress.Web.20.1.4\lib\net452'
     TargetFolder: '$(Build.SourcesDirectory)\WebSite1\Bin'

  - task: VSBuild@1
    displayName: Build solution
    inputs:
      solution: $(BuildParameters.solution)
      msbuildArgs: /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
  - task: PublishSymbols@2
    displayName: Publish symbols path
    continueOnError: True
    inputs:
      SearchPattern: '**\bin\**\*.pdb'
      PublishSymbols: false
      SymbolServerType: TeamServices
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: $(BuildParameters.ArtifactName)
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
...
